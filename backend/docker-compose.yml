version: "3.8"

services:
  # FinSage API Service
  api:
    build: .
    ports:
      - "8000:8000"
    environment:
      - APP_NAME=FinSage
      - DEBUG=False
      - VERSION=1.0.0
      - API_V1_PREFIX=/api/v1
      - CORS_ORIGINS=["http://localhost:3000", "http://127.0.0.1:3000"]
      - ML_MODEL_PATH=./models/fin_predictor.pkl
      - BLOCKCHAIN_RPC_URL=${BLOCKCHAIN_RPC_URL:-}
      - PRIVATE_KEY=${PRIVATE_KEY:-}
      - CONTRACT_ADDRESS=${CONTRACT_ADDRESS:-}
      - SECRET_KEY=${SECRET_KEY:-your-secret-key-change-in-production}
      - ACCESS_TOKEN_EXPIRE_MINUTES=30
    volumes:
      - ./logs:/app/logs
      - ./models:/app/models
      - ./contracts:/app/contracts
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Redis (for future use)
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # PostgreSQL (for future use)
  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=finsage
      - POSTGRES_USER=finsage_user
      - POSTGRES_PASSWORD=finsage_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U finsage_user -d finsage"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx (for production)
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - api
    restart: unless-stopped
    profiles:
      - production

volumes:
  redis_data:
  postgres_data:

networks:
  default:
    name: finsage_network
